{"version":3,"sources":["components/Header.js","components/Scoreboard.js","components/MessageBoard.js","imgs/boot.png","imgs/butterfly.png","imgs/chick.png","imgs/clover.png","imgs/dragonfly.png","imgs/fan.png","imgs/ladybird.png","imgs/leaf.png","imgs/moth.png","imgs/rainbow.png","imgs/rose.png","imgs/sprout.png","imgs/strawberry.png","imgs/sun.png","imgs/sunflower.png","imgs/worm.png","components/Cards.js","App.js","index.js"],"names":["Header","className","ScoreBoard","props","currentScore","bestScore","MessageBoard","message","CardContainer","useState","boot","butterfly","chick","clover","dragonfly","fan","ladybird","leaf","moth","rainbow","rose","sprout","strawberry","sun","sunflower","worm","cards","setCards","name","img","cardArray","updateArray","scores","setScores","lose","win","outcome","setOutcome","setMessage","updateMessage","result","resetGame","gameOver","handleClick","card","selection","useEffect","sort","Math","random","map","index","onClick","event","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae06a23c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n    return(\n        <div className=\"Header\">\n            <h1>Memory Game</h1>\n            <h3>Click each card, but only once. Click all of the cards just once to win!</h3>\n        </div>\n    )\n}\n\n","import React from 'react';\n\nexport default function ScoreBoard(props) {\n   return(\n       <div className=\"scoreContainer\">\n            <div className=\"currentScore\">\n            <span className=\"scoreLabel\">Current Score: </span> {props.currentScore}\n            </div>\n            <div className=\"bestScore\">\n            <span className=\"scoreLabel\">Best Score: </span> {props.bestScore}\n            </div>\n       </div>\n   ) \n}","import React from 'react';\n\nexport default function MessageBoard(props) {\n   return(\n       <div className=\"messageBoard\">\n           {props.message}\n       </div>\n   ) \n}","export default __webpack_public_path__ + \"static/media/boot.c2834d92.png\";","export default __webpack_public_path__ + \"static/media/butterfly.ebc06b55.png\";","export default __webpack_public_path__ + \"static/media/chick.8ce9a6af.png\";","export default __webpack_public_path__ + \"static/media/clover.0d3e9e4f.png\";","export default __webpack_public_path__ + \"static/media/dragonfly.eade7039.png\";","export default __webpack_public_path__ + \"static/media/fan.9c787c72.png\";","export default __webpack_public_path__ + \"static/media/ladybird.2ff16e3c.png\";","export default __webpack_public_path__ + \"static/media/leaf.4eb8bcbf.png\";","export default __webpack_public_path__ + \"static/media/moth.6fcc2837.png\";","export default __webpack_public_path__ + \"static/media/rainbow.a52872b9.png\";","export default __webpack_public_path__ + \"static/media/rose.007fe345.png\";","export default __webpack_public_path__ + \"static/media/sprout.b904053f.png\";","export default __webpack_public_path__ + \"static/media/strawberry.d8648181.png\";","export default __webpack_public_path__ + \"static/media/sun.6ca56838.png\";","export default __webpack_public_path__ + \"static/media/sunflower.8163366b.png\";","export default __webpack_public_path__ + \"static/media/worm.dcc74584.png\";","//components\nimport React, { useState, useEffect } from 'react';\nimport ScoreBoard from './Scoreboard.js';\nimport MessageBoard from './MessageBoard.js';\n\n// imgs\nimport boot from '../imgs/boot.png'; import butterfly from '../imgs/butterfly.png';\nimport chick from '../imgs/chick.png'; import clover from '../imgs/clover.png';\nimport dragonfly from '../imgs/dragonfly.png'; import fan from '../imgs/fan.png';\nimport ladybird from '../imgs/ladybird.png'; import leaf from '../imgs/leaf.png';\nimport moth from '../imgs/moth.png'; import rainbow from '../imgs/rainbow.png';\nimport rose from '../imgs/rose.png'; import sprout from '../imgs/sprout.png';\nimport strawberry from '../imgs/strawberry.png'; import sun from '../imgs/sun.png';\nimport sunflower from '../imgs/sunflower.png'; import worm from '../imgs/worm.png';\n\nexport default function CardContainer() {\n    const [cards, setCards] = useState({\n        boot: false, butterfly: false, chick: false, clover: false,\n        dragonfly: false, fan: false, ladybird: false, leaf: false,\n        moth: false, rainbow: false, rose: false, sprout: false,\n        strawberry: false, sun: false, sunflower: false, worm: false\n    });\n\n    const [cardArray, updateArray] = useState([\n        {name: 'boot', img: boot}, {name: 'butterfly', img: butterfly},\n        {name: 'chick', img: chick}, {name: 'clover', img: clover},\n        {name: 'dragonfly', img: dragonfly}, {name: 'fan', img: fan},\n        {name: 'ladybird', img: ladybird}, {name: 'leaf', img: leaf},\n        {name: 'moth', img: moth}, {name: 'rainbow', img: rainbow},\n        {name: 'rose', img: rose}, {name: 'sprout', img: sprout},\n        {name: 'strawberry', img: strawberry}, {name: 'sun', img: sun},\n        {name: 'sunflower', img: sunflower}, {name: 'worm', img: worm}\n    ]);\n\n    const [scores, setScores] = useState({\n        currentScore: 0,\n        bestScore: 0\n    })\n\n    const [outcome, setOutcome] = useState({\n        lose: false,\n        win: false\n    })\n\n    const [message, setMessage] = useState('Click a card to start!')\n\n    function addScore(){\n        setScores({...scores, currentScore: scores.currentScore + 1});\n    }\n\n    function resetScore(){\n        setScores({...scores, currentScore: 0});\n    }\n\n    function resetCards(){\n        setCards({...cards, \n            boot: false, butterfly: false, chick: false, clover: false,\n            dragonfly: false, fan: false, ladybird: false, leaf: false,\n            moth: false, rainbow: false, rose: false, sprout: false,\n            strawberry: false, sun: false, sunflower: false, worm: false})\n    }\n\n    function updateMessage(result){\n        if(result === 'win'){\n        setMessage('You win!! Play again? Just click another card.')\n    } else {\n        setMessage('Oh no! You lose. Play again? Just click another card.')\n    }\n    }\n\n    function resetMessage(){\n        setMessage('')\n    }\n\n    function resetGame(){\n        resetCards();\n        resetScore();\n        setOutcome({...outcome, lose: false, win: false})\n    }\n\n    function resetAll(){\n        resetGame();\n        setScores({...scores, bestScore: 0, currentScore: 0});\n    }\n\n    function gameOver(result){\n        if (result === 'lose'){\n            updateMessage('lose');\n            if (scores.currentScore > scores.bestScore){\n                setScores({...scores, bestScore: scores.currentScore}); \n            }\n            setOutcome({...outcome, lose: true})\n        } else if (result === 'win') {\n            updateMessage('win');\n            if (scores.currentScore > scores.bestScore){\n                setScores({...scores, bestScore: scores.currentScore}); \n            }\n            setOutcome({...outcome, win: true})\n        }\n    }\n    \n    function checkWin() {\n        if(scores.currentScore === 16) {\n            gameOver('win');\n        }\n    }\n\n    function handleClick(card) {\n        resetMessage();\n        let selection = card.name;\n        if (cards[selection] === false) {\n            setCards({...cards, [card.name]: true})\n            addScore();\n        } else {\n           gameOver('lose');\n        }\n    }\n\n   useEffect(() => {\n        updateArray(cardArray.sort(() => Math.random() - 0.5));\n        if (outcome.lose === true || outcome.win === true){\n        resetGame();\n        }\n        checkWin();\n    });\n\n    return(\n        <div className=\"container\">\n                <MessageBoard message={message} />\n            <div className=\"cardContainer\">\n                {cardArray.map((card, index) =>\n                    <div key={index} className=\"card\" onClick={(event) => {handleClick(card)}}>\n                    <img className=\"cardImage\" src={card.img} alt={card.name}/>    \n                    <h4 className=\"cardName\" name={card.name}>\n                    {card.name} \n                    </h4>\n                    </div>)}\n            </div>\n            <div className=\"scoreBoard\">\n                <ScoreBoard currentScore={scores.currentScore} bestScore={scores.bestScore} />\n                <button className=\"reset\" onClick={resetAll}>\n                    Reset All Scores\n                </button>\n            </div>\n        </div>\n    )\n\n}\n","import Header from \"./components/Header.js\"\nimport CardContainer from \"./components/Cards.js\"\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <CardContainer />\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App.js\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}